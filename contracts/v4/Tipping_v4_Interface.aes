@compiler >= 6

contract interface TokenContract =
  stateful entrypoint transfer_allowance : (address, address, int) => unit
  stateful entrypoint burn : (int) => unit

main contract Tipping =
  type tip_id = int
  type token_amount = int
  datatype tip = PostViaBurn(tip_meta, list(string), TokenContract, token_amount)

  record tip_meta = { sender : address, title : string, timestamp : int }
  record state = { tips : map(tip_id, tip), version : string }
  datatype event = PostViaBurnReceived(tip_id, address, string)

  stateful entrypoint post_via_burn : (string, list(string), TokenContract, token_amount) => int
  entrypoint get_state : () => state
  entrypoint get_tip_by_id : (int) => option(tip)
  entrypoint version : () => string
